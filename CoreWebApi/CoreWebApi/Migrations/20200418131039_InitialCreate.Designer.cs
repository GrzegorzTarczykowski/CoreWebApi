// <auto-generated />
using System;
using CoreWebApi.MsSqlServerDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreWebApi.Migrations
{
    [DbContext(typeof(MsSqlServerContext))]
    [Migration("20200418131039_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AllowedOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIdCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefreshTokenLifeTime")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("UserSenderId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("UserReceiverId")
                        .HasName("IX_UserReceiverId");

                    b.HasIndex("UserSenderId")
                        .HasName("IX_UserSenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDateOfRepair")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateOfRepair")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderStatusId")
                        .HasName("IX_OrderStatusId");

                    b.HasIndex("VehicleId")
                        .HasName("IX_VehicleId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.OrderService", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ServiceId")
                        .HasName("PK_dbo.OrderService");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("ServiceId")
                        .HasName("IX_ServiceId");

                    b.ToTable("OrderService");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusId");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.OrderVehiclePart", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("VehiclePartId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "VehiclePartId")
                        .HasName("PK_dbo.OrderVehiclePart");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("VehiclePartId")
                        .HasName("IX_VehiclePartId");

                    b.ToTable("OrderVehiclePart");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Permission", b =>
                {
                    b.Property<int>("PermissiondId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissiondId")
                        .HasName("PK_dbo.Permission");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.RefreshToken", b =>
                {
                    b.Property<string>("RefreshTokenId")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ClientCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IssuedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProtectedTicket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefreshTokenId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExecutionTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Timetable", b =>
                {
                    b.Property<int>("TimetableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("NumberOfEmployeesForCustomer")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEmployeesForManager")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEmployeesReservedForCustomer")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEmployeesReservedForManager")
                        .HasColumnType("int");

                    b.HasKey("TimetableId");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("PermissionId")
                        .HasName("IX_PermissionId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.UserOrder", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "OrderId")
                        .HasName("PK_dbo.UserOrder");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UserOrder");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.UserTimetable", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TimetableId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TimetableId")
                        .HasName("PK_dbo.UserTimetable");

                    b.HasIndex("TimetableId")
                        .HasName("IX_TimetableId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UserTimetable");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineMileage")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleEngineId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFuelId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleModelId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.HasIndex("VehicleEngineId")
                        .HasName("IX_VehicleEngineId");

                    b.HasIndex("VehicleFuelId")
                        .HasName("IX_VehicleFuelId");

                    b.HasIndex("VehicleModelId")
                        .HasName("IX_VehicleModelId");

                    b.HasIndex("VehicleTypeId")
                        .HasName("IX_VehicleTypeId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleBrand", b =>
                {
                    b.Property<int>("VehicleBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleBrandId");

                    b.ToTable("VehicleBrand");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleColour", b =>
                {
                    b.Property<int>("VehicleColourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleColourId");

                    b.ToTable("VehicleColour");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleEngine", b =>
                {
                    b.Property<int>("VehicleEngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CapacityCcm")
                        .HasColumnName("CapacityCCM")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("EngineCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PowerKw")
                        .HasColumnName("PowerKW")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("VehicleEngineId");

                    b.ToTable("VehicleEngine");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleFuel", b =>
                {
                    b.Property<int>("VehicleFuelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleFuelId");

                    b.ToTable("VehicleFuel");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleModel", b =>
                {
                    b.Property<int>("VehicleModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleBrandId")
                        .HasColumnType("int");

                    b.HasKey("VehicleModelId");

                    b.HasIndex("VehicleBrandId")
                        .HasName("IX_VehicleBrandId");

                    b.ToTable("VehicleModel");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehiclePart", b =>
                {
                    b.Property<int>("VehiclePartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("VehiclePartId");

                    b.ToTable("VehiclePart");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Message", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Order", "Order")
                        .WithMany("Message")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.Message_dbo.Order_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.User", "UserReceiver")
                        .WithMany("MessageUserReceiver")
                        .HasForeignKey("UserReceiverId")
                        .HasConstraintName("FK_dbo.Message_dbo.User_UserReceiverId")
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.User", "UserSender")
                        .WithMany("MessageUserSender")
                        .HasForeignKey("UserSenderId")
                        .HasConstraintName("FK_dbo.Message_dbo.User_UserSenderId")
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Order", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.OrderStatus", "OrderStatus")
                        .WithMany("Order")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK_dbo.Order_dbo.OrderStatus_OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Vehicle", "Vehicle")
                        .WithMany("Order")
                        .HasForeignKey("VehicleId")
                        .HasConstraintName("FK_dbo.Order_dbo.Vehicle_VehicleId")
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.OrderService", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Order", "Order")
                        .WithMany("OrderService")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.OrderService_dbo.Order_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Service", "Service")
                        .WithMany("OrderService")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_dbo.OrderService_dbo.Service_ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.OrderVehiclePart", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Order", "Order")
                        .WithMany("OrderVehiclePart")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.OrderVehiclePart_dbo.Order_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehiclePart", "VehiclePart")
                        .WithMany("OrderVehiclePart")
                        .HasForeignKey("VehiclePartId")
                        .HasConstraintName("FK_dbo.OrderVehiclePart_dbo.VehiclePart_VehiclePartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.User", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Permission", "Permission")
                        .WithMany("User")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_dbo.User_dbo.Permission_PermissionId")
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.UserOrder", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Order", "Order")
                        .WithMany("UserOrder")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.UserOrder_dbo.Order_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.User", "User")
                        .WithMany("UserOrder")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserOrder_dbo.User_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.UserTimetable", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.Timetable", "Timetable")
                        .WithMany("UserTimetable")
                        .HasForeignKey("TimetableId")
                        .HasConstraintName("FK_dbo.UserTimetable_dbo.Timetable_TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.User", "User")
                        .WithMany("UserTimetable")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UserTimetable_dbo.User_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.Vehicle", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.User", "User")
                        .WithMany("Vehicle")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.Vehicle_dbo.User_UserId")
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehicleEngine", "VehicleEngine")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleEngineId")
                        .HasConstraintName("FK_dbo.Vehicle_dbo.VehicleEngine_VehicleEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehicleFuel", "VehicleFuel")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleFuelId")
                        .HasConstraintName("FK_dbo.Vehicle_dbo.VehicleFuel_VehicleFuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehicleModel", "VehicleModel")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleModelId")
                        .HasConstraintName("FK_dbo.Vehicle_dbo.VehicleModel_VehicleModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehicleType", "VehicleType")
                        .WithMany("Vehicle")
                        .HasForeignKey("VehicleTypeId")
                        .HasConstraintName("FK_dbo.Vehicle_dbo.VehicleType_VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoreWebApi.MsSqlServerDB.Models.VehicleModel", b =>
                {
                    b.HasOne("CoreWebApi.MsSqlServerDB.Models.VehicleBrand", "VehicleBrand")
                        .WithMany("VehicleModel")
                        .HasForeignKey("VehicleBrandId")
                        .HasConstraintName("FK_dbo.VehicleModel_dbo.VehicleBrand_VehicleBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
